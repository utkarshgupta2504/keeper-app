{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","isClicked","setIsClicked","handleChange","event","target","name","value","autoComplete","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","filter","__","idx","noteObject","map","key","ReactDOM","render","document","getElementById"],"mappings":"uNAceA,MAXf,WACE,OACE,gCACE,4BACE,kBAAC,IAAD,MADF,YCKSC,MATf,WACE,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,K,iBCaPG,MAhBf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BACEC,QAAS,KACPJ,EAAMK,SAASL,EAAMM,MAGvB,kBAAC,IAAD,S,yCC+COC,MAvDf,SAAoBP,GAAQ,MAAD,EACDQ,mBAAS,CAC/BN,MAAO,GACPC,QAAS,KAHc,mBAClBM,EADkB,KACZC,EADY,OAMSF,oBAAS,GANlB,mBAMlBG,EANkB,KAMPC,EANO,KAQzB,SAASC,EAAaC,GAAQ,MAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACdP,EAAQ,2BAAKD,GAAN,IAAY,CAACO,GAAOC,KAc7B,OACE,6BACE,0BAAMhB,UAAU,cAAciB,aAAa,OACxCP,GACC,2BACEQ,SAAUN,EACVG,KAAK,QACLI,YAAY,QACZH,MAAOR,EAAKP,QAGhB,8BACEiB,SAAUN,EACVT,QAAS,KACPQ,GAAa,IAEfI,KAAK,UACLI,YAAY,iBACZC,KAAMV,EAAY,EAAI,EACtBM,MAAOR,EAAKN,UAEd,kBAACmB,EAAA,EAAD,CAAMC,GAAIZ,GACR,kBAACa,EAAA,EAAD,CAAKpB,QAjCb,SAAoBU,GAClBd,EAAMyB,MAAMhB,GACZC,EAAQ,CACNR,MAAO,GACPC,QAAS,KAGXS,GAAa,GACbE,EAAMY,mBA0BE,kBAAC,IAAD,WCjBGC,MA7Bf,WAAgB,MAAD,EACanB,mBAAS,IADtB,mBACNoB,EADM,KACCC,EADD,KAOb,SAASC,EAAWxB,GAClBuB,EAASD,EAAMG,OAAO,CAACC,EAAIC,IAAQA,IAAQ3B,IAG7C,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYmB,MAXhB,SAAiBS,GACfL,EAAS,IAAID,EAAOM,OAWjBN,EAAMO,IAAI,CAAC1B,EAAMwB,IAChB,kBAAC,EAAD,CACEG,IAAKH,EACL3B,GAAI2B,EACJ/B,MAAOO,EAAKP,MACZC,QAASM,EAAKN,QACdE,SAAUyB,KAGd,kBAAC,EAAD,QC1BNO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ccb59ae6.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <HighlightIcon />\n        Keeper\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button\n        onClick={() => {\n          props.onDelete(props.id);\n        }}\n      >\n        <DeleteIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport AddCircleIcon from \"@material-ui/icons/Add\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote({ ...note, [name]: value });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\",\n    });\n\n    setIsClicked(false);\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\" autoComplete=\"off\">\n        {isClicked && (\n          <input\n            onChange={handleChange}\n            name=\"title\"\n            placeholder=\"Title\"\n            value={note.title}\n          />\n        )}\n        <textarea\n          onChange={handleChange}\n          onClick={() => {\n            setIsClicked(true);\n          }}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows={isClicked ? 3 : 1}\n          value={note.content}\n        />\n        <Zoom in={isClicked}>\n          <Fab onClick={submitNote}>\n            <AddCircleIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(noteObject) {\n    setNotes([...notes, noteObject]);\n  }\n\n  function deleteNote(id) {\n    setNotes(notes.filter((__, idx) => idx !== id));\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((note, idx) => (\n        <Note\n          key={idx}\n          id={idx}\n          title={note.title}\n          content={note.content}\n          onDelete={deleteNote}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}